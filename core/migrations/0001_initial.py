# Generated by Django 2.2 on 2020-04-16 04:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_supplier', models.BooleanField(default=0)),
                ('is_customer', models.BooleanField(default=0)),
                ('is_agent', models.BooleanField(default=0)),
                ('is_employee', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=10)),
                ('invoice_date', models.DateField()),
                ('invoice_number', models.CharField(max_length=10)),
                ('invoice_value', models.FloatField()),
                ('commission', models.FloatField()),
                ('cash_discount', models.FloatField()),
                ('freight', models.FloatField()),
                ('insurance', models.FloatField()),
                ('gst', models.FloatField()),
                ('total_amount', models.FloatField()),
                ('total_amount_payable', models.FloatField()),
                ('remarks', models.CharField(max_length=50)),
                ('additional_remark', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Bill/Invoice',
            },
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='CustomerSampleRef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.CharField(max_length=256)),
                ('file_1', models.FileField(upload_to='')),
                ('file_2', models.FileField(blank=True, null=True, upload_to='')),
                ('file_3', models.FileField(blank=True, null=True, upload_to='')),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('tag', models.CharField(choices=[('P', 'Personal'), ('W', 'Work'), ('T', 'Travel'), ('I', 'Important')], max_length=1)),
            ],
            options={
                'verbose_name_plural': 'Calendar Events',
            },
        ),
        migrations.CreateModel(
            name='forwarded_quotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Inquiry Customer Forwarded Quotations',
            },
        ),
        migrations.CreateModel(
            name='inquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('M', 'Mail'), ('WC', 'WeChat'), ('WP', 'Whatsapp'), ('C', 'Call')], max_length=2)),
                ('status', models.CharField(choices=[('O', 'Open'), ('CM', 'Confirmed'), ('CD', 'Closed')], default='O', max_length=2)),
                ('close_choice', models.CharField(blank=True, choices=[('HP', 'Prices are High'), ('QS', 'Quality Not from nominated Supplier'), ('AF', 'Awaiting Feedback'), ('UD', 'Under Discussion or Development'), ('NO', 'Not Offered')], max_length=2, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('received_datetime', models.DateTimeField(auto_now_add=True)),
                ('reply_datetime', models.DateTimeField(blank=True, null=True)),
                ('received_quotation_datetime', models.DateTimeField(blank=True, null=True)),
                ('selected_quotation_datetime', models.DateTimeField(blank=True, null=True)),
                ('customer_feedback_datetime', models.DateTimeField(blank=True, null=True)),
                ('confirmation_datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Inquiry Details',
            },
        ),
        migrations.CreateModel(
            name='inquiry_product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveSmallIntegerField()),
                ('inco_terms', models.CharField(max_length=56)),
                ('delivery_date', models.DateField()),
                ('packing_requirement', models.CharField(max_length=56)),
                ('destination_port', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Inquiry Products',
            },
        ),
        migrations.CreateModel(
            name='inquiry_update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_date_time', models.DateField(auto_now_add=True)),
                ('subject', models.CharField(max_length=256)),
                ('content', models.TextField()),
                ('document', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Inquiry Customer Feedback',
            },
        ),
        migrations.CreateModel(
            name='intermingle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Intermingle',
            },
        ),
        migrations.CreateModel(
            name='note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('date', models.DateField()),
                ('is_favourite', models.BooleanField(default=0)),
                ('tag', models.CharField(choices=[('P', 'Personal'), ('W', 'Work'), ('S', 'Social'), ('I', 'Important')], max_length=1)),
            ],
            options={
                'verbose_name_plural': 'Notes',
            },
        ),
        migrations.CreateModel(
            name='notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'User Notisfications',
            },
        ),
        migrations.CreateModel(
            name='office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('addr1', models.CharField(max_length=100)),
                ('addr2', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('country', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name_plural': 'Responsible Offices',
            },
        ),
        migrations.CreateModel(
            name='order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enquiry_no', models.SlugField()),
                ('date_of_inquiry', models.DateField()),
                ('po_no', models.CharField(max_length=20)),
                ('contract_no', models.CharField(max_length=20)),
                ('price_kg', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('dispatch_qty', models.IntegerField()),
                ('contract_value', models.IntegerField()),
                ('quantity_discount', models.IntegerField()),
                ('insurance', models.IntegerField()),
                ('remarks', models.CharField(max_length=100)),
                ('extra_remarks', models.TextField()),
                ('financial_year', models.CharField(max_length=4)),
                ('month', models.CharField(max_length=10)),
                ('status', models.BooleanField(default=0)),
                ('order_confirmation', models.CharField(max_length=4)),
                ('indenting_commission', models.IntegerField()),
                ('agent_commission', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Enquiry Details',
            },
        ),
        migrations.CreateModel(
            name='payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=10)),
                ('payment_terms', models.CharField(max_length=100)),
                ('payment_due_date', models.DateField()),
                ('remarks', models.CharField(max_length=200)),
                ('additional_remarks', models.TextField()),
                ('payment_status', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Payment Details',
            },
        ),
        migrations.CreateModel(
            name='PaymentTerms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=50)),
                ('days', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('application', models.CharField(max_length=50)),
                ('polymer_fiber', models.CharField(choices=[('P', 'Polyster'), ('F', 'fiber'), ('PA6', 'pa - 6'), ('Blnd', 'blend')], max_length=4, verbose_name='Polymer/Fiber')),
                ('luster', models.CharField(choices=[('sd', 'Semi Dull'), ('brt', 'Bright'), ('fd', 'Full Dull')], max_length=4)),
                ('filament_cross_section', models.CharField(choices=[('C', 'Circular'), ('TL', 'Trilobal'), ('TA', 'Triangular'), ('OL', 'Octalobal'), ('S', 'Star'), ('R', 'Rice'), ('O', 'Orange'), ('C', 'Coolmax')], max_length=4)),
                ('lycra_percent_or_any_additional_additive', models.CharField(max_length=4)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='product_shade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shade_name', models.CharField(max_length=50)),
                ('shade_code', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='required_no_of_nips',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Required No of Nips',
            },
        ),
        migrations.CreateModel(
            name='SampleRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.CharField(choices=[('IQ', 'Inquiry'), ('IN', 'Indent'), ('BD', 'Business Development')], max_length=2)),
                ('receiving_date', models.DateField(auto_now_add=True)),
                ('delivered_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleRequestDispatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_1', models.FileField(upload_to='')),
                ('courier_details', models.CharField(max_length=256)),
                ('date', models.DateField(auto_now_add=True)),
                ('estimate_delivery', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SampleRequestFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('content', models.TextField()),
                ('file_1', models.FileField(blank=True, null=True, upload_to='')),
                ('file_2', models.FileField(blank=True, null=True, upload_to='')),
                ('file_3', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='SampleRequestProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_detail', models.CharField(max_length=256)),
                ('quality_instruction', models.CharField(max_length=256)),
                ('number_of_cones', models.PositiveSmallIntegerField()),
                ('weight_cone', models.FloatField()),
                ('packing_detail', models.CharField(max_length=256)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='shipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('freight', models.FloatField()),
                ('dispatch_by', models.CharField(max_length=100)),
                ('delivery_date', models.DateField()),
                ('otif', models.BooleanField(default=0)),
                ('inco_terms', models.CharField(max_length=100)),
                ('place_of_delivery', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=50)),
                ('additional_remarks', models.TextField()),
                ('port_of_discharge', models.CharField(max_length=50)),
                ('courier_details', models.CharField(max_length=100)),
                ('email_date', models.DateField()),
                ('dispatch_summary_otif', models.BooleanField(default=0)),
                ('post_shipment_otif', models.BooleanField(default=0)),
                ('copy_of_shipment', models.BooleanField(default=0)),
                ('documents_otif', models.BooleanField(default=0)),
                ('status', models.CharField(choices=[('S', 'Shipped'), ('Di', 'Dispatch'), ('P', 'Pending'), ('Dl', 'Delivered')], max_length=4)),
            ],
            options={
                'verbose_name_plural': 'Shipment Details',
            },
        ),
        migrations.CreateModel(
            name='subcategory1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Sub-Category 1',
            },
        ),
        migrations.CreateModel(
            name='subcategory2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Sub-Category 2',
            },
        ),
        migrations.CreateModel(
            name='suplus_product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_product', models.CharField(blank=True, max_length=200, null=True)),
                ('qty', models.IntegerField()),
                ('price_unit', models.IntegerField()),
                ('location', models.CharField(max_length=256)),
                ('document', models.FileField(blank=True, null=True, upload_to='')),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Suplus Product Details',
            },
        ),
        migrations.CreateModel(
            name='updates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('IU', 'Industry Updates'), ('TA', 'Technological Advancements'), ('IDT', 'International Duties and Trade'), ('PTA', 'Price Trend Analysis')], max_length=3)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Updates/News',
            },
        ),
        migrations.CreateModel(
            name='to_do',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('date', models.DateField()),
                ('is_important', models.BooleanField(default=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': "To Do's",
            },
        ),
        migrations.CreateModel(
            name='supplier_quotations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_kg', models.PositiveIntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('inquiry', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.inquiry')),
                ('payment_terms', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.PaymentTerms')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.inquiry_product')),
            ],
            options={
                'verbose_name_plural': 'Inquiry Supplier Quotations',
            },
        ),
    ]
