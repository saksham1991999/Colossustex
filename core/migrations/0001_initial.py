# Generated by Django 2.2.10 on 2020-03-08 14:24

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cta', models.SlugField()),
                ('name', models.CharField(max_length=100)),
                ('addr1', models.CharField(max_length=100)),
                ('addr2', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('country', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('document', models.FileField(upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Agents',
            },
        ),
        migrations.CreateModel(
            name='bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=10)),
                ('invoice_date', models.DateField()),
                ('invoice_number', models.CharField(max_length=10)),
                ('invoice_value', models.FloatField()),
                ('commission', models.FloatField()),
                ('cash_discount', models.FloatField()),
                ('freight', models.FloatField()),
                ('insurance', models.FloatField()),
                ('gst', models.FloatField()),
                ('total_amount', models.FloatField()),
                ('total_amount_payable', models.FloatField()),
                ('remarks', models.CharField(max_length=50)),
                ('additional_remark', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Bill/Invoice',
            },
        ),
        migrations.CreateModel(
            name='customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctc', models.SlugField()),
                ('name', models.CharField(max_length=100)),
                ('buyer_name', models.CharField(max_length=100)),
                ('addr1', models.CharField(max_length=100)),
                ('addr2', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('country', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('document', models.FileField(upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cti', models.SlugField()),
                ('name', models.CharField(max_length=100)),
                ('Designation', models.CharField(max_length=100)),
                ('dob', models.DateField()),
                ('addr1', models.CharField(max_length=100)),
                ('addr2', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('country', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('document', models.FileField(upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('addr1', models.CharField(max_length=100)),
                ('addr2', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('country', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name_plural': 'Responsible Offices',
            },
        ),
        migrations.CreateModel(
            name='order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inquiry_no', models.SlugField()),
                ('date_of_inquiry', models.DateField()),
                ('po_no', models.CharField(max_length=20)),
                ('contract_no', models.CharField(max_length=20)),
                ('price_kg', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('dispatch_qty', models.IntegerField()),
                ('contract_value', models.IntegerField()),
                ('quantity_discount', models.IntegerField()),
                ('insurance', models.IntegerField()),
                ('remarks', models.CharField(max_length=100)),
                ('extra_remarks', models.TextField()),
                ('source', models.CharField(max_length=100)),
                ('financial_year', models.CharField(max_length=4)),
                ('month', models.CharField(max_length=10)),
                ('status', models.BooleanField(default=0)),
                ('order_confirmation', models.CharField(max_length=4)),
                ('indenting_commission', models.IntegerField()),
                ('commission', models.IntegerField()),
                ('net_commission', models.IntegerField()),
                ('commission_on_invoice_beneficiary', models.IntegerField()),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.agent')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.customer')),
            ],
            options={
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.SlugField()),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('P', 'Polyster')], max_length=3)),
                ('sub_category', models.CharField(max_length=50)),
                ('application', models.CharField(max_length=50)),
                ('polymer_fiber', models.CharField(choices=[('P', 'Polyster'), ('F', 'fiber'), ('PA6', 'pa - 6'), ('Blnd', 'blend')], max_length=4, verbose_name='Polymer/Fiber')),
                ('luster', models.CharField(choices=[('sd', 'sd'), ('brt', 'brt'), ('sbrt', 'superbrt')], max_length=4)),
                ('filament_cross_section', models.CharField(choices=[('C', 'Circular'), ('cir', 'cir'), ('tbl', 'tbl'), ('T', 'triangular')], max_length=4)),
                ('tex_specification', models.CharField(choices=[('210', '210mm'), ('z-t', 'z - twist'), ('na', 'Not Applicable')], max_length=4)),
                ('required_no_of_nips', models.CharField(choices=[('40-50', '40 - 50'), ('85-90', '85 - 90'), ('sim', 'sim'), ('na', 'Not Applicable')], max_length=4)),
                ('lycra_percent_or_any_additional_additive', models.CharField(max_length=4)),
                ('shade_name', models.CharField(max_length=50)),
                ('shade_code', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cts', models.SlugField()),
                ('name', models.CharField(max_length=100)),
                ('consignee', models.CharField(max_length=100)),
                ('addr1', models.CharField(max_length=100)),
                ('addr2', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('country', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('document', models.FileField(upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='supplierquotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_quantity', models.FloatField()),
                ('price_kg', models.FloatField()),
                ('total_amount', models.FloatField()),
                ('gst', models.FloatField()),
                ('freight', models.FloatField()),
                ('discount', models.FloatField()),
                ('total_amount_payable', models.FloatField()),
                ('document', models.FileField(upload_to='')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.order')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.supplier')),
            ],
            options={
                'verbose_name_plural': 'Supplier Quotations',
            },
        ),
        migrations.CreateModel(
            name='shipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('freight', models.FloatField()),
                ('dispatch_by', models.CharField(max_length=100)),
                ('delivery_date', models.DateField()),
                ('otif', models.BooleanField(default=0)),
                ('inco_terms', models.CharField(max_length=100)),
                ('place_of_delivery', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=50)),
                ('additional_remarks', models.TextField()),
                ('port_of_discharge', models.CharField(max_length=50)),
                ('courier_details', models.CharField(max_length=100)),
                ('email_date', models.DateField()),
                ('dispatch_summary_otif', models.BooleanField(default=0)),
                ('post_shipment_otif', models.BooleanField(default=0)),
                ('copy_of_shipment', models.BooleanField(default=0)),
                ('documents_otif', models.BooleanField(default=0)),
                ('status', models.CharField(choices=[('S', 'Shipped'), ('Di', 'Dispatch'), ('P', 'Pending'), ('Dl', 'Delivered')], max_length=4)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.order')),
            ],
            options={
                'verbose_name_plural': 'Shipment Details',
            },
        ),
        migrations.CreateModel(
            name='payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuurency', models.CharField(max_length=10)),
                ('payment_terms', models.CharField(max_length=100)),
                ('payment_due_date', models.DateField()),
                ('remarks', models.CharField(max_length=200)),
                ('additional_remarks', models.TextField()),
                ('payment_status', models.BooleanField(default=0)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.bill')),
            ],
            options={
                'verbose_name_plural': 'Payment Details',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='final_supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='final_supplier', to='core.supplier'),
        ),
        migrations.AddField(
            model_name='order',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='responsible_office',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.office'),
        ),
        migrations.AddField(
            model_name='order',
            name='suppliers_quotation',
            field=models.ManyToManyField(related_name='initial_suppliers', to='core.supplier'),
        ),
        migrations.CreateModel(
            name='customerfeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.customer')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.order')),
            ],
            options={
                'verbose_name_plural': 'Customer Feedbacks',
            },
        ),
        migrations.AddField(
            model_name='bill',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.order'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_supplier', models.BooleanField(default=0)),
                ('is_customer', models.BooleanField(default=0)),
                ('is_agent', models.BooleanField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
